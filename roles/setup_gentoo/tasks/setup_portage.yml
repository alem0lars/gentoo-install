---

sudo fizzy cfg s -C portage -U ssh:alem0lars/configs-portage
sudo fizzy qi -C portage -I portage -V kate

- name: Setup local portage repository (1/4)
  file:
    path:  /usr/local/portage/metadata
    state: directory
  tags: repository

- name: Setup local portage repository (2/4)
  template:
    src:  portage/local_repository/layout.conf.j2
    dest: /usr/local/portage/metadata/layout.conf
  tags: repository

- name: Setup local portage repository (3/4)
  template:
    src:  portage/local_repository/repo_name.j2
    dest: /usr/local/portage/repo_name
  tags: repository

- name: Setup local portage repository (4/4)
  command: chown -R portage:portage /usr/local/portage
  tags: repository

# Crossdev
# root #mkdir -p /usr/local/portage-crossdev/{profiles,metadata}
# root #echo 'crossdev' > /usr/local/portage-crossdev/profiles/repo_name
# root #echo 'masters = gentoo' > /usr/local/portage-crossdev/metadata/layout.conf
# root #chown -R portage:portage /usr/local/portage-crossdev
# If the main Portage tree is synchronized by using Git, or any other method with Manifest files that do not include checksums for ebuilds, prevent "masked by: corruption" errors with:

# FILE /usr/local/portage-crossdev/metadata/layout.conf
# masters = gentoo
# thin-manifests = true
# Then instruct Portage and crossdev to use this overlay:

- name: Update GCC version
  command: gcc-config 1 # TODO: Choose based on CHOST

- name: Update environment
  command: eselect env update
  tags:
    - environment

- name: fare passi di alem0lars/configs_book/gentoo/configuration/software/portage.md

Se si vuole abilitare distcc allora:

emerge distcc
systemctl enable distccd
systemctl restart distccd

Se si vuole abilitare crosscompiling allora:

emerge crossdev

Installare le architetture aggiuntive volute:

sudo crossdev -t mingw32

- command: layman -o https://raw.github.com/alem0lars/apo/master/repositories.xml -f -a apo
